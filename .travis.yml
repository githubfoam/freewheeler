---
sudo: required
branches:
  only:
    - tox-branch
language: python
python:
  # - "3.8"
  # - "3.7"
  # - "3.6"
  # - "3.5"
  - "2.7"
env:
  matrix:
    # - TOX_ENV=py27 MOLECULE_SCENARIO=ubuntu1604
    # - TOX_ENV=py27 MOLECULE_SCENARIO=ubuntu1804
    # - TOX_ENV=py27 MOLECULE_SCENARIO=ubuntu1810
    # - TOX_ENV=py27 MOLECULE_SCENARIO=ubuntu1904 #ok
    # - TOX_ENV=py27 MOLECULE_SCENARIO=centos80
    - TOX_ENV=py27 MOLECULE_SCENARIO=centos77
    # - TOX_ENV=py27 MOLECULE_SCENARIO=centos76
    # - TOX_ENV=py27 MOLECULE_SCENARIO=centos74
    # - TOX_ENV=py27 MOLECULE_SCENARIO=fedora29
    # - TOX_ENV=py27 MOLECULE_SCENARIO=alpine38
    # - TOX_ENV=py27 MOLECULE_SCENARIO=amazonlinux
    # - TOX_ENV=py27 MOLECULE_SCENARIO=oraclelinux
    # - TOX_ENV=py27 MOLECULE_SCENARIO=opensuseleap
    # - TOX_ENV=py27 MOLECULE_SCENARIO=opensusetumbleweed
    # - TOX_ENV=py27 MOLECULE_SCENARIO=debianjessie
    # - MOLECULE_SCENARIO=photon
services:
  - docker
before_install:
  - sudo apt-get -qq update
install:
  - pip install -r requirements.txt
  # - pip install tox
  - tox --version
  # Travis provides the python version for each test as TRAVIS_PYTHON_VERSION,
  # but in the form '3.4', while tox expects 'py34'
  # If you don't want to rely on an external lib (tox-travis) to do the translation, you can do that manually
  - tox -e $(echo py$TRAVIS_PYTHON_VERSION | tr -d .)
  # This works for pypy Source: flask-mongoengine's .travis.yml.
  # - tox -e $(echo py$TRAVIS_PYTHON_VERSION | tr -d . | sed -e 's/pypypy/pypy/')
script:
  - molecule lint --scenario-name ${MOLECULE_SCENARIO}
  - molecule destroy --scenario-name ${MOLECULE_SCENARIO}
  - molecule dependency --scenario-name ${MOLECULE_SCENARIO}
  - molecule syntax --scenario-name ${MOLECULE_SCENARIO}
  - molecule create --scenario-name ${MOLECULE_SCENARIO}
  - molecule prepare --scenario-name ${MOLECULE_SCENARIO}
  - molecule converge --scenario-name ${MOLECULE_SCENARIO}
  - molecule side-effect --scenario-name ${MOLECULE_SCENARIO}
  - molecule verify --scenario-name ${MOLECULE_SCENARIO}
  - molecule destroy --scenario-name ${MOLECULE_SCENARIO}
notifications:
  email:
    on_success: never
    on_failure: always
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
